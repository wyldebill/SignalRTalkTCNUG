 Server side C# MVC
 
 
1.  Owin startup class
    // add the Startup class here, for OWIN

    public class Startup
    {
        public void Configuration(IAppBuilder app)
        {
            app.MapSignalR();
        }
    }


===============================================================================================================================
2.  Hub class 



using System.Configuration;
using System.Threading.Tasks;
using Microsoft.AspNet.SignalR;

namespace SignalRProgress
{
    //[HubName("")]
    public class ProgressHub : Hub
    {
        private static string MasterId { get; set; }


        public override Task OnConnected()
        {
            var connectionIdCurrentUser = Context.ConnectionId;

            if (connectionIdCurrentUser != MasterId && MasterId != null)
                Clients.Caller.youAreNotTheMaster();
            return base.OnConnected();
        }


        public void Auto()
        {
            SetValue(15, 1000);
            SetValue(65, 7000);
            SetValue(85, 8000);
            SetValue(100, 1000);
        }

        public void IAmTheMaster(string key)
        {
            if (key == "4679")
            {
                MasterId = Context.ConnectionId;
                Clients.Others.youAreNotTheMaster();
            }
          
        }

        public void SetValue(int value, int time)
        {
            Clients.All.SetValue(value, time);
        }


        public void Set50()
        {
            Clients.All.SetClient50();
        }

        public void Set100()
        {
            Clients.All.SetClient100();
        }

        public void Set0()
        {
            Clients.All.SetClient0();
        }
    }
}


=========================================================================================================================
3.  MVC View for the progress bar
@{
    ViewBag.Title = "Index";
}

<h2>SignalR Real-Time Progress Bar</h2>


<div id="test" class="meter">
    <span style="width: 0%"></span>
</div>

<input id="iAmTheMaster" type="button" value="I Am The Master"/>
<input id="key" type="password" maxlength="6"/>
<input id="0percent" type="button" value="0%"/>
<input id="50percent" type="button" value="50%"/>
<input id="100percent" type="button" value="100%"/>

<input id="auto" type="button" value="auto"/>

@section Scripts {
    
    <script src="~/Scripts/jquery.signalR-2.1.1.js"></script>
    <script src="Signalr/hubs"></script>
    <script src="~/Scripts/progress.js"></script>

}



====================================================================================================================
#0.75  progress bar css




        /* progress bar style*/
       
		.meter { 
			height: 20px;  /* Can be anything */
			position: relative;
			margin: 60px 0 20px 0; /* Just for demo spacing */
			background: #555;
			-moz-border-radius: 25px;
			-webkit-border-radius: 25px;
			border-radius: 25px;
			padding: 10px;
			-webkit-box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);
			-moz-box-shadow   : inset 0 -1px 1px rgba(255,255,255,0.3);
			box-shadow        : inset 0 -1px 1px rgba(255,255,255,0.3);
		}
		.meter > span {
			display: block;
			height: 100%;
			   -webkit-border-top-right-radius: 8px;
			-webkit-border-bottom-right-radius: 8px;
			       -moz-border-radius-topright: 8px;
			    -moz-border-radius-bottomright: 8px;
			           border-top-right-radius: 8px;
			        border-bottom-right-radius: 8px;
			    -webkit-border-top-left-radius: 20px;
			 -webkit-border-bottom-left-radius: 20px;
			        -moz-border-radius-topleft: 20px;
			     -moz-border-radius-bottomleft: 20px;
			            border-top-left-radius: 20px;
			         border-bottom-left-radius: 20px;
			background-color: rgb(43,194,83);
			background-image: -webkit-gradient(
			  linear,
			  left bottom,
			  left top,
			  color-stop(0, rgb(43,194,83)),
			  color-stop(1, rgb(84,240,84))
			 );
			background-image: -moz-linear-gradient(
			  center bottom,
			  rgb(43,194,83) 37%,
			  rgb(84,240,84) 69%
			 );
			-webkit-box-shadow: 
			  inset 0 2px 9px  rgba(255,255,255,0.3),
			  inset 0 -2px 6px rgba(0,0,0,0.4);
			-moz-box-shadow: 
			  inset 0 2px 9px  rgba(255,255,255,0.3),
			  inset 0 -2px 6px rgba(0,0,0,0.4);
			box-shadow: 
			  inset 0 2px 9px  rgba(255,255,255,0.3),
			  inset 0 -2px 6px rgba(0,0,0,0.4);
			position: relative;
			overflow: hidden;
		}
		.meter > span:after, .animate > span > span {
			content: "";
			position: absolute;
			top: 0; left: 0; bottom: 0; right: 0;
			background-image: 
			   -webkit-gradient(linear, 0 0, 100% 100%, 
			      color-stop(.25, rgba(255, 255, 255, .2)), 
			      color-stop(.25, transparent), color-stop(.5, transparent), 
			      color-stop(.5, rgba(255, 255, 255, .2)), 
			      color-stop(.75, rgba(255, 255, 255, .2)), 
			      color-stop(.75, transparent), to(transparent)
			   );
			background-image: 
				-moz-linear-gradient(
				  -45deg, 
			      rgba(255, 255, 255, .2) 25%, 
			      transparent 25%, 
			      transparent 50%, 
			      rgba(255, 255, 255, .2) 50%, 
			      rgba(255, 255, 255, .2) 75%, 
			      transparent 75%, 
			      transparent
			   );
			z-index: 1;
			-webkit-background-size: 50px 50px;
			-moz-background-size: 50px 50px;
			-webkit-animation: move 2s linear infinite;
			   -webkit-border-top-right-radius: 8px;
			-webkit-border-bottom-right-radius: 8px;
			       -moz-border-radius-topright: 8px;
			    -moz-border-radius-bottomright: 8px;
			           border-top-right-radius: 8px;
			        border-bottom-right-radius: 8px;
			    -webkit-border-top-left-radius: 20px;
			 -webkit-border-bottom-left-radius: 20px;
			        -moz-border-radius-topleft: 20px;
			     -moz-border-radius-bottomleft: 20px;
			            border-top-left-radius: 20px;
			         border-bottom-left-radius: 20px;
			overflow: hidden;
		}
		
		.animate > span:after {
			display: none;
		}
		
		@-webkit-keyframes move {
		    0% {
		       background-position: 0 0;
		    }
		    100% {
		       background-position: 50px 50px;
		    }
		}
		
		.orange > span {
			background-color: #f1a165;
			background-image: -moz-linear-gradient(top, #f1a165, #f36d0a);
			background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, #f1a165),color-stop(1, #f36d0a));
			background-image: -webkit-linear-gradient(#f1a165, #f36d0a); 
		}
		
		.red > span {
			background-color: #f0a3a3;
			background-image: -moz-linear-gradient(top, #f0a3a3, #f42323);
			background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, #f0a3a3),color-stop(1, #f42323));
			background-image: -webkit-linear-gradient(#f0a3a3, #f42323);
		}
		
		.nostripes > span > span, .nostripes > span:after {
			-webkit-animation: none;
			background-image: none;
		}
	
}


============================================================================================================================================
    // step 1. get a reference to the signalr hub
    var progHub = $.connection.progressHub;

=============================================================================================================================================
    
	
	// step 2. set the clientside functions
    progHub.client.RecMessage = function(msg) {
        console.log(msg);
    };

    progHub.client.setValue = function(val, time) {
        $('#test > span').animate({
            width: (val + '%')
        }, time, function() {
            // Animation complete.
        });
            
    };

    progHub.client.setClient50 = function() {
        $('#test > span').animate({
            width: '50%'
        }, 200, function() {
            // Animation complete.
        });
    };

    progHub.client.setClient100 = function () {
        $('#test > span').animate({
            width: '100%'
        }, 200, function () {
            // Animation complete.
        });
    };
        
    progHub.client.setClient0 = function () {
        $('#test > span').animate({
            width: '0%'
        }, 200, function () {
            // Animation complete.
        });
    };
        

    progHub.client.youAreNotTheMaster = function () {
        $('[id$=percent]').hide();
        $('#iAmTheMaster').hide();
        $('#auto').hide();
        $('#key').hide();
    };

    progHub.client.setMaster = function() {
        $('#iAmTheMaster').css('color', 'green');
    };
    

=================================================================================================================
    // step 3. call start on the hub, use .done and .fail
    $.connection.hub.logging = true;
    $.connection.hub.start()
    .done(function () {
        console.log('Now connected, connection ID=' + $.connection.hub.id);

        // step 4.  setup the functions to call on server
        // this is defining messages the server can call on me
        $('#0percent').click(function () {
            progHub.server.set0();
        });
        $('#50percent').click(function () {
            progHub.server.set50();
        });
        $('#100percent').click(function () {
            progHub.server.set100();
        });


        $('#auto').click(function () {
            progHub.server.auto();
        });

        $('#iAmTheMaster').click(function () {
            progHub.server.iAmTheMaster();
        });
    })
    .fail(function() {
         console.log('Could not Connect!');
    });

			
===============================================================================================================			


        // step 4.  setup the functions to call on server
        // this is defining messages the server can call on me
        $('#0percent').click(function () {
            progHub.server.set0();
        });
        $('#50percent').click(function () {
            progHub.server.set50();
        });
        $('#100percent').click(function () {
            progHub.server.set100();
        });


        $('#auto').click(function () {
            progHub.server.auto();
        });

        $('#iAmTheMaster').click(function () {
            progHub.server.iAmTheMaster();
        });
        